{"ast":null,"code":"/**\r\n * InstrumentWatchlist Component\r\n * \r\n * Real-time instrument monitoring with live price updates, color-coded status indicators,\r\n * and quick alert rule creation functionality. Optimized for <50ms WebSocket update rendering.\r\n */import React,{useMemo,useCallback}from'react';import{useQuery}from'@tanstack/react-query';import{apiClient,queryKeys}from'../../services/apiClient';import{useInstrumentWatch}from'../../hooks/useRealTimeData';import{InstrumentStatus,InstrumentType}from'../../types';// =============================================================================\n// TYPES\n// =============================================================================\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// =============================================================================\n// MAIN COMPONENT\n// =============================================================================\nexport const InstrumentWatchlist=_ref=>{let{onAddAlert,maxInstruments=15,showAddButton=true,className=''}=_ref;// Fetch instruments from API\nconst{data:instruments=[],isLoading,error,refetch}=useQuery({queryKey:queryKeys.instruments({status:InstrumentStatus.ACTIVE}),queryFn:()=>apiClient.getInstruments({status:InstrumentStatus.ACTIVE}),refetchInterval:30000,// Refetch every 30 seconds as fallback\nstaleTime:10000// Consider data fresh for 10 seconds\n});// Limit instruments for performance\nconst limitedInstruments=useMemo(()=>instruments.slice(0,maxInstruments),[instruments,maxInstruments]);// Get real-time data for instruments\nconst{instruments:instrumentsWithData,isConnected}=useInstrumentWatch(limitedInstruments);// Sort instruments by symbol for consistent display\nconst sortedInstruments=useMemo(()=>[...instrumentsWithData].sort((a,b)=>a.symbol.localeCompare(b.symbol)),[instrumentsWithData]);// =============================================================================\n// EVENT HANDLERS\n// =============================================================================\nconst handleAddAlert=useCallback(instrumentId=>{onAddAlert===null||onAddAlert===void 0?void 0:onAddAlert(instrumentId);},[onAddAlert]);const handleRefresh=useCallback(()=>{refetch();},[refetch]);// =============================================================================\n// RENDER\n// =============================================================================\nif(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-container \".concat(className),children:[/*#__PURE__*/_jsx(WatchlistHeader,{isConnected:isConnected,onRefresh:handleRefresh,isLoading:true}),/*#__PURE__*/_jsx(\"div\",{className:\"watchlist-loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-skeleton\",children:Array.from({length:5}).map((_,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"skeleton-row\"},i))})})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-container \".concat(className),children:[/*#__PURE__*/_jsx(WatchlistHeader,{isConnected:isConnected,onRefresh:handleRefresh,isLoading:false}),/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-error\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Failed to load instruments\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRefresh,className:\"retry-button\",children:\"Retry\"})]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-container \".concat(className),children:[/*#__PURE__*/_jsx(WatchlistHeader,{isConnected:isConnected,onRefresh:handleRefresh,isLoading:false,count:sortedInstruments.length}),/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-table\",children:[/*#__PURE__*/_jsx(WatchlistTableHeader,{}),/*#__PURE__*/_jsx(\"div\",{className:\"watchlist-body\",children:sortedInstruments.map(instrument=>/*#__PURE__*/_jsx(InstrumentRow,{instrument:instrument,currentPrice:instrument.currentPrice,priceChange:instrument.priceChange,isLive:instrument.isLive,onAddAlert:handleAddAlert,showAddButton:showAddButton},instrument.id))})]}),sortedInstruments.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"watchlist-empty\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No active instruments to monitor\"})})]});};// =============================================================================\n// SUB-COMPONENTS\n// =============================================================================\nconst WatchlistHeader=_ref2=>{let{isConnected,onRefresh,isLoading,count}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-title\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Market Watch\"}),count!==undefined&&/*#__PURE__*/_jsxs(\"span\",{className:\"instrument-count\",children:[\"(\",count,\" instruments)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"connection-status \".concat(isConnected?'connected':'disconnected'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator\"}),/*#__PURE__*/_jsx(\"span\",{children:isConnected?'Live':'Offline'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onRefresh,disabled:isLoading,className:\"refresh-button\",\"aria-label\":\"Refresh instruments\",children:\"\\uD83D\\uDD04\"})]})]});};const WatchlistTableHeader=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-header-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-cell symbol\",children:\"Symbol\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-cell name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-cell type\",children:\"Type\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-cell price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-cell change\",children:\"Change\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-cell status\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-cell actions\",children:\"Actions\"})]});const InstrumentRow=_ref3=>{var _ref4;let{instrument,currentPrice,priceChange,isLive,onAddAlert,showAddButton}=_ref3;const priceChangeClass=useMemo(()=>{if(!priceChange)return'neutral';return priceChange>0?'positive':'negative';},[priceChange]);const statusClass=useMemo(()=>{if(!isLive)return'offline';switch(instrument.status){case InstrumentStatus.ACTIVE:return'active';case InstrumentStatus.INACTIVE:return'inactive';case InstrumentStatus.ERROR:return'error';default:return'unknown';}},[instrument.status,isLive]);const formatPrice=useCallback(price=>{if(price===null)return'-';return price.toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:4});},[]);const formatPriceChange=useCallback(change=>{if(change===null)return'-';const sign=change>0?'+':'';return\"\".concat(sign).concat(change.toFixed(2),\"%\");},[]);const getTypeDisplay=useCallback(type=>{switch(type){case InstrumentType.FUTURE:return'Future';case InstrumentType.INDEX:return'Index';case InstrumentType.INTERNAL:return'Internal';default:return type;}},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"watchlist-row \".concat(statusClass),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cell symbol\",children:[/*#__PURE__*/_jsx(\"strong\",{children:instrument.symbol}),isLive&&/*#__PURE__*/_jsx(\"div\",{className:\"live-indicator\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"cell name\",title:instrument.name,children:instrument.name}),/*#__PURE__*/_jsx(\"div\",{className:\"cell type\",children:/*#__PURE__*/_jsx(\"span\",{className:\"type-badge \".concat(instrument.type),children:getTypeDisplay(instrument.type)})}),/*#__PURE__*/_jsx(\"div\",{className:\"cell price \".concat(priceChangeClass),children:formatPrice((_ref4=currentPrice!==null&&currentPrice!==void 0?currentPrice:instrument.last_price)!==null&&_ref4!==void 0?_ref4:null)}),/*#__PURE__*/_jsx(\"div\",{className:\"cell change \".concat(priceChangeClass),children:formatPriceChange(priceChange)}),/*#__PURE__*/_jsxs(\"div\",{className:\"cell status \".concat(statusClass),children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator\"}),/*#__PURE__*/_jsx(\"span\",{children:instrument.status})]}),/*#__PURE__*/_jsx(\"div\",{className:\"cell actions\",children:showAddButton&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>onAddAlert===null||onAddAlert===void 0?void 0:onAddAlert(instrument.id),className:\"add-alert-button\",title:\"Create alert for \".concat(instrument.symbol),\"aria-label\":\"Create alert for \".concat(instrument.symbol),children:\"+ Alert\"})})]});};// =============================================================================\n// STYLES (to be moved to CSS file)\n// =============================================================================\n// Note: These styles should be moved to a separate CSS file in production\nconst watchlistStyles=\"\\n.watchlist-container {\\n  background: rgba(255, 255, 255, 0.05);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n  border-radius: 8px;\\n  overflow: hidden;\\n}\\n\\n.watchlist-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 16px 20px;\\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\\n  background: rgba(255, 255, 255, 0.02);\\n}\\n\\n.watchlist-title h3 {\\n  margin: 0;\\n  color: #ffffff;\\n  font-size: 18px;\\n  font-weight: 600;\\n}\\n\\n.instrument-count {\\n  color: #888;\\n  font-size: 14px;\\n  margin-left: 8px;\\n}\\n\\n.watchlist-controls {\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n}\\n\\n.connection-status {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  font-size: 12px;\\n  font-weight: 500;\\n}\\n\\n.connection-status.connected {\\n  color: #00d4aa;\\n}\\n\\n.connection-status.disconnected {\\n  color: #ff5555;\\n}\\n\\n.status-indicator {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: currentColor;\\n}\\n\\n.refresh-button {\\n  background: none;\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #ffffff;\\n  padding: 6px 8px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 14px;\\n}\\n\\n.refresh-button:hover {\\n  background: rgba(255, 255, 255, 0.05);\\n}\\n\\n.watchlist-table {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.watchlist-header-row {\\n  display: grid;\\n  grid-template-columns: 100px 200px 80px 100px 80px 80px 100px;\\n  gap: 12px;\\n  padding: 12px 20px;\\n  background: rgba(255, 255, 255, 0.02);\\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #aaa;\\n  text-transform: uppercase;\\n}\\n\\n.watchlist-row {\\n  display: grid;\\n  grid-template-columns: 100px 200px 80px 100px 80px 80px 100px;\\n  gap: 12px;\\n  padding: 12px 20px;\\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\\n  transition: background-color 0.15s ease;\\n}\\n\\n.watchlist-row:hover {\\n  background: rgba(255, 255, 255, 0.02);\\n}\\n\\n.cell {\\n  display: flex;\\n  align-items: center;\\n  font-size: 14px;\\n}\\n\\n.cell.symbol {\\n  font-weight: 600;\\n  position: relative;\\n}\\n\\n.live-indicator {\\n  position: absolute;\\n  top: -2px;\\n  right: -8px;\\n  width: 6px;\\n  height: 6px;\\n  background: #00d4aa;\\n  border-radius: 50%;\\n  animation: pulse 2s infinite;\\n}\\n\\n.cell.name {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.type-badge {\\n  padding: 2px 6px;\\n  border-radius: 12px;\\n  font-size: 10px;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n}\\n\\n.type-badge.future {\\n  background: rgba(0, 123, 255, 0.2);\\n  color: #007bff;\\n}\\n\\n.type-badge.index {\\n  background: rgba(255, 193, 7, 0.2);\\n  color: #ffc107;\\n}\\n\\n.type-badge.internal {\\n  background: rgba(108, 117, 125, 0.2);\\n  color: #6c757d;\\n}\\n\\n.cell.positive {\\n  color: #00d4aa;\\n}\\n\\n.cell.negative {\\n  color: #ff5555;\\n}\\n\\n.cell.neutral {\\n  color: #888;\\n}\\n\\n.add-alert-button {\\n  background: rgba(0, 212, 170, 0.1);\\n  border: 1px solid rgba(0, 212, 170, 0.3);\\n  color: #00d4aa;\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  font-size: 11px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.15s ease;\\n}\\n\\n.add-alert-button:hover {\\n  background: rgba(0, 212, 170, 0.2);\\n  border-color: rgba(0, 212, 170, 0.5);\\n}\\n\\n@keyframes pulse {\\n  0%, 100% { opacity: 1; }\\n  50% { opacity: 0.3; }\\n}\\n\\n.watchlist-loading,\\n.watchlist-error,\\n.watchlist-empty {\\n  padding: 40px 20px;\\n  text-align: center;\\n  color: #888;\\n}\\n\\n.skeleton-row {\\n  height: 48px;\\n  background: rgba(255, 255, 255, 0.05);\\n  margin: 8px 0;\\n  border-radius: 4px;\\n  animation: skeleton-loading 1.5s ease-in-out infinite alternate;\\n}\\n\\n@keyframes skeleton-loading {\\n  0% { opacity: 0.3; }\\n  100% { opacity: 0.7; }\\n}\\n\\n.retry-button {\\n  background: rgba(255, 85, 85, 0.1);\\n  border: 1px solid rgba(255, 85, 85, 0.3);\\n  color: #ff5555;\\n  padding: 8px 16px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  margin-top: 16px;\\n}\\n\";export default InstrumentWatchlist;","map":{"version":3,"names":["React","useMemo","useCallback","useQuery","apiClient","queryKeys","useInstrumentWatch","InstrumentStatus","InstrumentType","jsx","_jsx","jsxs","_jsxs","InstrumentWatchlist","_ref","onAddAlert","maxInstruments","showAddButton","className","data","instruments","isLoading","error","refetch","queryKey","status","ACTIVE","queryFn","getInstruments","refetchInterval","staleTime","limitedInstruments","slice","instrumentsWithData","isConnected","sortedInstruments","sort","a","b","symbol","localeCompare","handleAddAlert","instrumentId","handleRefresh","concat","children","WatchlistHeader","onRefresh","Array","from","length","map","_","i","onClick","count","WatchlistTableHeader","instrument","InstrumentRow","currentPrice","priceChange","isLive","id","_ref2","undefined","disabled","_ref3","_ref4","priceChangeClass","statusClass","INACTIVE","ERROR","formatPrice","price","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatPriceChange","change","sign","toFixed","getTypeDisplay","type","FUTURE","INDEX","INTERNAL","title","name","last_price","watchlistStyles"],"sources":["/home/janos/dev/Trade/TradeAssist/src/frontend/src/components/Dashboard/InstrumentWatchlist.tsx"],"sourcesContent":["/**\r\n * InstrumentWatchlist Component\r\n * \r\n * Real-time instrument monitoring with live price updates, color-coded status indicators,\r\n * and quick alert rule creation functionality. Optimized for <50ms WebSocket update rendering.\r\n */\r\n\r\nimport React, { useMemo, useCallback } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { apiClient, queryKeys } from '../../services/apiClient';\r\nimport { useInstrumentWatch } from '../../hooks/useRealTimeData';\r\nimport { Instrument, InstrumentStatus, InstrumentType } from '../../types';\r\n\r\n// =============================================================================\r\n// TYPES\r\n// =============================================================================\r\n\r\ninterface InstrumentWatchlistProps {\r\n  onAddAlert?: (instrumentId: number) => void;\r\n  maxInstruments?: number;\r\n  showAddButton?: boolean;\r\n  className?: string;\r\n}\r\n\r\ninterface InstrumentRowProps {\r\n  instrument: Instrument;\r\n  currentPrice: number | null;\r\n  priceChange: number | null;\r\n  isLive: boolean;\r\n  onAddAlert?: (instrumentId: number) => void;\r\n  showAddButton?: boolean;\r\n}\r\n\r\n// =============================================================================\r\n// MAIN COMPONENT\r\n// =============================================================================\r\n\r\nexport const InstrumentWatchlist: React.FC<InstrumentWatchlistProps> = ({\r\n  onAddAlert,\r\n  maxInstruments = 15,\r\n  showAddButton = true,\r\n  className = ''\r\n}) => {\r\n  // Fetch instruments from API\r\n  const {\r\n    data: instruments = [],\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useQuery({\r\n    queryKey: queryKeys.instruments({ status: InstrumentStatus.ACTIVE }),\r\n    queryFn: () => apiClient.getInstruments({ status: InstrumentStatus.ACTIVE }),\r\n    refetchInterval: 30000, // Refetch every 30 seconds as fallback\r\n    staleTime: 10000 // Consider data fresh for 10 seconds\r\n  });\r\n\r\n  // Limit instruments for performance\r\n  const limitedInstruments = useMemo(() => \r\n    instruments.slice(0, maxInstruments), \r\n    [instruments, maxInstruments]\r\n  );\r\n\r\n  // Get real-time data for instruments\r\n  const { instruments: instrumentsWithData, isConnected } = useInstrumentWatch(limitedInstruments);\r\n\r\n  // Sort instruments by symbol for consistent display\r\n  const sortedInstruments = useMemo(() =>\r\n    [...instrumentsWithData].sort((a, b) => a.symbol.localeCompare(b.symbol)),\r\n    [instrumentsWithData]\r\n  );\r\n\r\n  // =============================================================================\r\n  // EVENT HANDLERS\r\n  // =============================================================================\r\n\r\n  const handleAddAlert = useCallback((instrumentId: number) => {\r\n    onAddAlert?.(instrumentId);\r\n  }, [onAddAlert]);\r\n\r\n  const handleRefresh = useCallback(() => {\r\n    refetch();\r\n  }, [refetch]);\r\n\r\n  // =============================================================================\r\n  // RENDER\r\n  // =============================================================================\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`watchlist-container ${className}`}>\r\n        <WatchlistHeader \r\n          isConnected={isConnected}\r\n          onRefresh={handleRefresh}\r\n          isLoading={true}\r\n        />\r\n        <div className=\"watchlist-loading\">\r\n          <div className=\"loading-skeleton\">\r\n            {Array.from({ length: 5 }).map((_, i) => (\r\n              <div key={i} className=\"skeleton-row\" />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`watchlist-container ${className}`}>\r\n        <WatchlistHeader \r\n          isConnected={isConnected}\r\n          onRefresh={handleRefresh}\r\n          isLoading={false}\r\n        />\r\n        <div className=\"watchlist-error\">\r\n          <p>Failed to load instruments</p>\r\n          <button onClick={handleRefresh} className=\"retry-button\">\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`watchlist-container ${className}`}>\r\n      <WatchlistHeader \r\n        isConnected={isConnected}\r\n        onRefresh={handleRefresh}\r\n        isLoading={false}\r\n        count={sortedInstruments.length}\r\n      />\r\n      \r\n      <div className=\"watchlist-table\">\r\n        <WatchlistTableHeader />\r\n        <div className=\"watchlist-body\">\r\n          {sortedInstruments.map((instrument) => (\r\n            <InstrumentRow\r\n              key={instrument.id}\r\n              instrument={instrument}\r\n              currentPrice={instrument.currentPrice}\r\n              priceChange={instrument.priceChange}\r\n              isLive={instrument.isLive}\r\n              onAddAlert={handleAddAlert}\r\n              showAddButton={showAddButton}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {sortedInstruments.length === 0 && (\r\n        <div className=\"watchlist-empty\">\r\n          <p>No active instruments to monitor</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// =============================================================================\r\n// SUB-COMPONENTS\r\n// =============================================================================\r\n\r\ninterface WatchlistHeaderProps {\r\n  isConnected: boolean;\r\n  onRefresh: () => void;\r\n  isLoading: boolean;\r\n  count?: number;\r\n}\r\n\r\nconst WatchlistHeader: React.FC<WatchlistHeaderProps> = ({\r\n  isConnected,\r\n  onRefresh,\r\n  isLoading,\r\n  count\r\n}) => (\r\n  <div className=\"watchlist-header\">\r\n    <div className=\"watchlist-title\">\r\n      <h3>Market Watch</h3>\r\n      {count !== undefined && (\r\n        <span className=\"instrument-count\">({count} instruments)</span>\r\n      )}\r\n    </div>\r\n    \r\n    <div className=\"watchlist-controls\">\r\n      <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n        <div className=\"status-indicator\" />\r\n        <span>{isConnected ? 'Live' : 'Offline'}</span>\r\n      </div>\r\n      \r\n      <button \r\n        onClick={onRefresh}\r\n        disabled={isLoading}\r\n        className=\"refresh-button\"\r\n        aria-label=\"Refresh instruments\"\r\n      >\r\n        🔄\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst WatchlistTableHeader: React.FC = () => (\r\n  <div className=\"watchlist-header-row\">\r\n    <div className=\"header-cell symbol\">Symbol</div>\r\n    <div className=\"header-cell name\">Name</div>\r\n    <div className=\"header-cell type\">Type</div>\r\n    <div className=\"header-cell price\">Price</div>\r\n    <div className=\"header-cell change\">Change</div>\r\n    <div className=\"header-cell status\">Status</div>\r\n    <div className=\"header-cell actions\">Actions</div>\r\n  </div>\r\n);\r\n\r\nconst InstrumentRow: React.FC<InstrumentRowProps> = ({\r\n  instrument,\r\n  currentPrice,\r\n  priceChange,\r\n  isLive,\r\n  onAddAlert,\r\n  showAddButton\r\n}) => {\r\n  const priceChangeClass = useMemo(() => {\r\n    if (!priceChange) return 'neutral';\r\n    return priceChange > 0 ? 'positive' : 'negative';\r\n  }, [priceChange]);\r\n\r\n  const statusClass = useMemo(() => {\r\n    if (!isLive) return 'offline';\r\n    switch (instrument.status) {\r\n      case InstrumentStatus.ACTIVE: return 'active';\r\n      case InstrumentStatus.INACTIVE: return 'inactive';\r\n      case InstrumentStatus.ERROR: return 'error';\r\n      default: return 'unknown';\r\n    }\r\n  }, [instrument.status, isLive]);\r\n\r\n  const formatPrice = useCallback((price: number | null): string => {\r\n    if (price === null) return '-';\r\n    return price.toLocaleString('en-US', {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 4\r\n    });\r\n  }, []);\r\n\r\n  const formatPriceChange = useCallback((change: number | null): string => {\r\n    if (change === null) return '-';\r\n    const sign = change > 0 ? '+' : '';\r\n    return `${sign}${change.toFixed(2)}%`;\r\n  }, []);\r\n\r\n  const getTypeDisplay = useCallback((type: InstrumentType): string => {\r\n    switch (type) {\r\n      case InstrumentType.FUTURE: return 'Future';\r\n      case InstrumentType.INDEX: return 'Index';\r\n      case InstrumentType.INTERNAL: return 'Internal';\r\n      default: return type;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`watchlist-row ${statusClass}`}>\r\n      <div className=\"cell symbol\">\r\n        <strong>{instrument.symbol}</strong>\r\n        {isLive && <div className=\"live-indicator\" />}\r\n      </div>\r\n      \r\n      <div className=\"cell name\" title={instrument.name}>\r\n        {instrument.name}\r\n      </div>\r\n      \r\n      <div className=\"cell type\">\r\n        <span className={`type-badge ${instrument.type}`}>\r\n          {getTypeDisplay(instrument.type)}\r\n        </span>\r\n      </div>\r\n      \r\n      <div className={`cell price ${priceChangeClass}`}>\r\n        {formatPrice(currentPrice ?? instrument.last_price ?? null)}\r\n      </div>\r\n      \r\n      <div className={`cell change ${priceChangeClass}`}>\r\n        {formatPriceChange(priceChange)}\r\n      </div>\r\n      \r\n      <div className={`cell status ${statusClass}`}>\r\n        <div className=\"status-indicator\" />\r\n        <span>{instrument.status}</span>\r\n      </div>\r\n      \r\n      <div className=\"cell actions\">\r\n        {showAddButton && (\r\n          <button\r\n            onClick={() => onAddAlert?.(instrument.id)}\r\n            className=\"add-alert-button\"\r\n            title={`Create alert for ${instrument.symbol}`}\r\n            aria-label={`Create alert for ${instrument.symbol}`}\r\n          >\r\n            + Alert\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// =============================================================================\r\n// STYLES (to be moved to CSS file)\r\n// =============================================================================\r\n\r\n// Note: These styles should be moved to a separate CSS file in production\r\nconst watchlistStyles = `\r\n.watchlist-container {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.watchlist-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  background: rgba(255, 255, 255, 0.02);\r\n}\r\n\r\n.watchlist-title h3 {\r\n  margin: 0;\r\n  color: #ffffff;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.instrument-count {\r\n  color: #888;\r\n  font-size: 14px;\r\n  margin-left: 8px;\r\n}\r\n\r\n.watchlist-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.connection-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.connection-status.connected {\r\n  color: #00d4aa;\r\n}\r\n\r\n.connection-status.disconnected {\r\n  color: #ff5555;\r\n}\r\n\r\n.status-indicator {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background: currentColor;\r\n}\r\n\r\n.refresh-button {\r\n  background: none;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: #ffffff;\r\n  padding: 6px 8px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.refresh-button:hover {\r\n  background: rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.watchlist-table {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.watchlist-header-row {\r\n  display: grid;\r\n  grid-template-columns: 100px 200px 80px 100px 80px 80px 100px;\r\n  gap: 12px;\r\n  padding: 12px 20px;\r\n  background: rgba(255, 255, 255, 0.02);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  color: #aaa;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.watchlist-row {\r\n  display: grid;\r\n  grid-template-columns: 100px 200px 80px 100px 80px 80px 100px;\r\n  gap: 12px;\r\n  padding: 12px 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n  transition: background-color 0.15s ease;\r\n}\r\n\r\n.watchlist-row:hover {\r\n  background: rgba(255, 255, 255, 0.02);\r\n}\r\n\r\n.cell {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.cell.symbol {\r\n  font-weight: 600;\r\n  position: relative;\r\n}\r\n\r\n.live-indicator {\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -8px;\r\n  width: 6px;\r\n  height: 6px;\r\n  background: #00d4aa;\r\n  border-radius: 50%;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.cell.name {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.type-badge {\r\n  padding: 2px 6px;\r\n  border-radius: 12px;\r\n  font-size: 10px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.type-badge.future {\r\n  background: rgba(0, 123, 255, 0.2);\r\n  color: #007bff;\r\n}\r\n\r\n.type-badge.index {\r\n  background: rgba(255, 193, 7, 0.2);\r\n  color: #ffc107;\r\n}\r\n\r\n.type-badge.internal {\r\n  background: rgba(108, 117, 125, 0.2);\r\n  color: #6c757d;\r\n}\r\n\r\n.cell.positive {\r\n  color: #00d4aa;\r\n}\r\n\r\n.cell.negative {\r\n  color: #ff5555;\r\n}\r\n\r\n.cell.neutral {\r\n  color: #888;\r\n}\r\n\r\n.add-alert-button {\r\n  background: rgba(0, 212, 170, 0.1);\r\n  border: 1px solid rgba(0, 212, 170, 0.3);\r\n  color: #00d4aa;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.15s ease;\r\n}\r\n\r\n.add-alert-button:hover {\r\n  background: rgba(0, 212, 170, 0.2);\r\n  border-color: rgba(0, 212, 170, 0.5);\r\n}\r\n\r\n@keyframes pulse {\r\n  0%, 100% { opacity: 1; }\r\n  50% { opacity: 0.3; }\r\n}\r\n\r\n.watchlist-loading,\r\n.watchlist-error,\r\n.watchlist-empty {\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n  color: #888;\r\n}\r\n\r\n.skeleton-row {\r\n  height: 48px;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  margin: 8px 0;\r\n  border-radius: 4px;\r\n  animation: skeleton-loading 1.5s ease-in-out infinite alternate;\r\n}\r\n\r\n@keyframes skeleton-loading {\r\n  0% { opacity: 0.3; }\r\n  100% { opacity: 0.7; }\r\n}\r\n\r\n.retry-button {\r\n  background: rgba(255, 85, 85, 0.1);\r\n  border: 1px solid rgba(255, 85, 85, 0.3);\r\n  color: #ff5555;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 16px;\r\n}\r\n`;\r\n\r\nexport default InstrumentWatchlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}